// Code generated by MockGen. DO NOT EDIT.
// Source: domain/push_token.go

// Package mock_domain is a generated GoMock package.
package mock_domain

import (
	firestore "cloud.google.com/go/firestore"
	context "context"
	gomock "github.com/golang/mock/gomock"
	domain "github.com/wheatandcat/PeperomiaBackend/domain"
	reflect "reflect"
)

// MockPushTokenRepository is a mock of PushTokenRepository interface
type MockPushTokenRepository struct {
	ctrl     *gomock.Controller
	recorder *MockPushTokenRepositoryMockRecorder
}

// MockPushTokenRepositoryMockRecorder is the mock recorder for MockPushTokenRepository
type MockPushTokenRepositoryMockRecorder struct {
	mock *MockPushTokenRepository
}

// NewMockPushTokenRepository creates a new mock instance
func NewMockPushTokenRepository(ctrl *gomock.Controller) *MockPushTokenRepository {
	mock := &MockPushTokenRepository{ctrl: ctrl}
	mock.recorder = &MockPushTokenRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPushTokenRepository) EXPECT() *MockPushTokenRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockPushTokenRepository) Create(ctx context.Context, f *firestore.Client, i domain.PushTokenRecord) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, f, i)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create
func (mr *MockPushTokenRepositoryMockRecorder) Create(ctx, f, i interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockPushTokenRepository)(nil).Create), ctx, f, i)
}

// FindByUID mocks base method
func (m *MockPushTokenRepository) FindByUID(ctx context.Context, f *firestore.Client, uid string) ([]domain.PushTokenRecord, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindByUID", ctx, f, uid)
	ret0, _ := ret[0].([]domain.PushTokenRecord)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindByUID indicates an expected call of FindByUID
func (mr *MockPushTokenRepositoryMockRecorder) FindByUID(ctx, f, uid interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindByUID", reflect.TypeOf((*MockPushTokenRepository)(nil).FindByUID), ctx, f, uid)
}

// FindAll mocks base method
func (m *MockPushTokenRepository) FindAll(ctx context.Context, f *firestore.Client) ([]domain.PushTokenRecord, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindAll", ctx, f)
	ret0, _ := ret[0].([]domain.PushTokenRecord)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindAll indicates an expected call of FindAll
func (mr *MockPushTokenRepositoryMockRecorder) FindAll(ctx, f interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindAll", reflect.TypeOf((*MockPushTokenRepository)(nil).FindAll), ctx, f)
}
